services:
  database:
    image: postgres:16
    container_name: navyojan-postgres-db-server
    restart: always
    expose:
      - 25060
    ports:
      - 5432:5432
    env_file:
      - .env
    volumes:
      - ./database/docker-postgres:/var/lib/postgresql/data
    environment:
      - TZ=Asia/Kolkata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - RABBITMQ=amqp://${RABBITMQ_USER}:${RABBITMQ_PASS}@navyojan-rabbitmq-server/
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${POSTGRES_USERNAME} -d ${POSTGRES_DATABASE}'",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - navyojan-app

  backend:
    container_name: navyojan-backend-server
    restart: always
    build:
      context: .
      dockerfile: dockerfile
    ports:
      - 8080:8000
    env_file:
      - .env
    depends_on:
      - database
    working_dir: /navyojan-project
    command: >
      bash -c "
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000 --noreload"
    environment:
      - TZ=Asia/Kolkata
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - RABBITMQ=amqp://${RABBITMQ_USER}:${RABBITMQ_PASS}@navyojan-rabbitmq-server/
    networks:
      - navyojan-app

  celery-worker:
    container_name: navyojan-celery-worker
    build:
      context: .
      dockerfile: dockerfile
    working_dir: /navyojan-project/
    volumes:
      - ./logs/:/navyojan-project/logs/
    depends_on:
      - celery-flower
      - database
      - message-broker
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - TZ=Asia/Kolkata
      - C_FORCE_ROOT=true
      - POSTGRES_HOST=navyojan-postgres-db-server
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - RABBITMQ=amqp://${RABBITMQ_USER}:${RABBITMQ_PASS}@navyojan-rabbitmq-server/
    command: celery -A navyojan worker -Q default-queue -l INFO -n default_worker@navyojan
    networks:
      - navyojan-app

  celery-flower:
    container_name: navyojan-celery-flower
    build:
      context: .
      dockerfile: dockerfile
    env_file:
      - .env
    working_dir: /navyojan-project/
    image: mher/flower
    restart: unless-stopped
    ports:
      - 5555:5555
    environment:
      - TZ=Asia/Kolkata
    command: celery -A navyojan flower --port=5555
    depends_on:
      - database
      - message-broker
    networks:
      - navyojan-app

  message-broker:
    image: rabbitmq:3.13-management
    container_name: navyojan-rabbitmq-server
    restart: unless-stopped
    expose:
      - 5672
      - 15672
    environment:
      - TZ=Asia/Kolkata
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - navyojan-app

  cron-job:
    build:
      dockerfile: Dockerfile.cron
    container_name: navyojan-cron-job
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - backend
    networks:
      - navyojan-app

networks:
  navyojan-app:

volumes:
  logs-volumes: